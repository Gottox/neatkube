name: Release
on:
  push:
    tags:
    - 'v[0-9]*.[0-9]*.[0-9]*'

jobs:
  prepare:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v3

    # Check Versions
    - name: Check If Versions Match
      run: |
        # Ignore versions for now
        exit 0
        cargo_version=$(cargo pkgid | cut -d'#' -f 2)

        set -x
        test "${cargo_version}"   = "${GITHUB_REF_NAME#v}"

  build:
    needs: prepare
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-musl
        - i686-unknown-linux-musl
        - x86_64-unknown-linux-musl
        - armv7-unknown-linux-musleabihf
        #- i686-pc-windows-gnu
        #- x86_64-pc-windows-gnu
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-build
      name: Build
      with:
        target: ${{ matrix.target }}
        use-cross: true

  build-apple:
    needs: prepare
    runs-on: 'macos-latest'
    strategy:
      matrix:
        target:
        - x86_64-apple-darwin
        - aarch64-apple-darwin
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-build
      name: Build
      with:
        target: ${{ matrix.target }}
        use-cross: false

  docker:
    needs:
    - build
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v3

    - name: Install qemu dependency
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ steps.map_arch.outputs.result }}
        path: artifacts

    - name: Extract Artifact
      run: |
        for d in artifacts/*/; do
          tar -C "$d" -xf "$d/"*.tar.gz;
        done
        ln -sr artifacts/{i686,x86}-unknown-linux-musl
        ln -sr artifacts/armv7-unknown-linux-musl{eabihf,}
    - name: List artifacts
      run: |
        find artifacts

    - name: Build Docker Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        archs: "386, amd64, arm64, arm"
        image: neatkube
        tags: ${{ github.ref_name }} sha-${{ github.sha }} latest
        containerfiles: ./Dockerfile.gh

    - name: Push to Dockerhub
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: docker.io/withlazers
        username: withlazers
        password: ${{ secrets.DOCKER_TOKEN }}

  release:
    needs:
    - build
    - build-apple
    runs-on: 'ubuntu-latest'

    steps:
    - name: download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - uses: softprops/action-gh-release@v1
      with:
        fail_on_unmatched_files: true
        generate_release_notes: true
        draft: true
        files: |
          artifacts/*/*
